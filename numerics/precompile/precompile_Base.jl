function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Base.LinAlg.LAPACK.chklapackerror, (Int32,))
    precompile(Base.string, (ASCIIString, Char,))
    precompile(Base.Broadcast.broadcast_shape, (Array{Float64, 1},))
    precompile(Base.throw_boundserror, (Array{Float64, 2}, Tuple{Base.UnitRange{Int32}, Base.UnitRange{Int32}},))
    precompile(Base.Serializer.serialize_type, (Base.SerializationState{Base.Pipe}, DataType,))
    precompile(Base.Broadcast.broadcast_shape, (Array{Float64, 2},))
    precompile(Base.Broadcast.check_broadcast_shape, (Tuple{Int32}, Array{Float64, 1},))
    precompile(Base.Broadcast.check_broadcast_shape, (Tuple{Int32, Int32}, Array{Float64, 2},))
    precompile(Base.LinAlg._generic_matmatmul!, (Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.throw_checksize_error, (Array{Float64, 2}, Int32, Base.UnitRange{Int32},))
    precompile(Base.Filesystem.pathsep, (ASCIIString,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, UInt8,))
    precompile(Base.Serializer.serialize_array_data, (Base.Pipe, Array{UInt8, 1},))
    precompile(Base.copy!, (Array{Float64, 2}, Base.UnitRange{Int32}, Base.UnitRange{Int32}, Array{Float64, 2}, Base.UnitRange{Int32}, Base.UnitRange{Int32},))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, Array{UInt8, 1},))
    precompile(Base.write, (Base.Pipe, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.resize!, (Array{Base.Dict{Int32, Any}, 1}, Int32,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, ASCIIString,))
    precompile(Base.Filesystem.lstat, (ASCIIString,))
    precompile(Base.check_open, (Base.PipeEndpoint,))
    precompile(Base.stride, (Array{Float64, 1}, Int32,))
    precompile(Base.rehash!, (Base.Dict{Int32, Any}, Int32,))
    precompile(Base.open, (Base.CmdRedirect, ASCIIString, Base.TTY,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, QuoteNode,))
    precompile(Base.LinAlg.istriu, (Array{Float64, 2},))
    precompile(Base.Serializer.write_as_tag, (Base.Pipe, Int32,))
    precompile(Base.malloc_julia_pipe!, (Base.PipeEndpoint,))
    precompile(Base.Serializer.serialize_mod_names, (Base.SerializationState{Base.Pipe}, Module,))
    precompile(Base.Broadcast.gen_broadcast_body_iter, (Int32, Int32, Base.MulFun,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base._link_pipe, (Ptr{Void}, Ptr{Void},))
    precompile(Base.copy, (Array{Float64, 2},))
    precompile(Base.write, (Base.Pipe, Array{UInt8, 1},))
    precompile(Base.unsafe_write, (Base.Pipe, Base.RefValue{Int32}, Int32,))
    precompile(Base.resize!, (Array{Base.Dict{Int32, Base.Dict{Int32, Any}}, 1}, Int32,))
    precompile(Base.fill!, (Array{Float64, 1}, Int32,))
    precompile(Base.copy_transpose!, (Array{Float64, 2}, Base.UnitRange{Int32}, Base.UnitRange{Int32}, Array{Float64, 2}, Base.UnitRange{Int32}, Base.UnitRange{Int32},))
    precompile(Base.unsafe_copy!, (Array{Float64, 2}, Int32, Array{Float64, 2}, Int32, Int32,))
    precompile(Base.LinAlg.generic_matvecmul!, (Array{Float64, 1}, Char, Array{Float64, 2}, Array{Float64, 1},))
    precompile(Base._jl_spawn, (UTF8String, Array{Union{UTF8String, ASCIIString}, 1}, Ptr{Void}, Base.Process, Base.PipeEndpoint, Base.TTY, Base.TTY,))
    precompile(Base.unsafe_convert, (Type{Ptr{Ptr{UInt8}}}, Base.RefArray{Ptr{UInt8}, Array{Ptr{UInt8}, 1}, Any},))
    precompile(Base.LinAlg.triu!, (Array{Float64, 2}, Int32,))
    precompile(Base.LinAlg.BLAS.gemv!, (Char, Float64, Array{Float64, 2}, Array{Float64, 1}, Float64, Array{Float64, 1},))
    precompile(Base.Broadcast.gen_broadcast_body_iter, (Int32, Int32, Function,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Tuple{Int32},))
    precompile(Base.zero, (Type{Float64},))
    precompile(Base.transposeblock!, (Array{Float64, 2}, Array{Float64, 2}, Int32, Int32, Int32, Int32,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.julia_cmd, (UTF8String,))
    precompile(Base.getindex, (Tuple{Symbol}, Base.UnitRange{Int32},))
    precompile(Base.call, (Array{Any, 1}, Type{Base.Cmd}, Base.Cmd,))
    precompile(Base.LinAlg.generic_lufact!, (Array{Float64, 2}, Type{Base.Val{true}},))
    precompile(Base.LinAlg.LAPACK.geevx!, (Char, Char, Char, Char, Array{Float64, 2},))
    precompile(Base.LinAlg.LAPACK.getri!, (Array{Float64, 2}, Array{Int32, 1},))
    precompile(Base.LinAlg.istril, (Array{Float64, 2},))
    precompile(Base.LinAlg.matmul3x3!, (Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.uv_write, (Base.PipeEndpoint, Ptr{UInt8}, UInt32,))
    precompile(Base.Broadcast.gen_broadcast_function, (Function, Int32, Int32, Base.MulFun,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, LineNumberNode,))
    precompile(Base.LinAlg.LAPACK.chkfinite, (Array{Float64, 2},))
    precompile(Base.Serializer.serialize_any, (Base.SerializationState{Base.Pipe}, LineNumberNode,))
    precompile(Base.Broadcast.gen_broadcast_function, (Function, Int32, Int32, Function,))
    precompile(Base.LinAlg.lapack_size, (Char, Array{Float64, 2},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Symbol,))
    precompile(Base.call, (Type{Base.Process}, Base.Cmd, Ptr{Void}, Base.Pipe, Base.TTY, Base.TTY,))
    precompile(Base.LinAlg.matmul2x2!, (Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Array{UInt8, 1},))
    precompile(Base.sizeof, (Array{Float64, 2},))
    precompile(Base.Broadcast.bitcache_eq, (Array{Float64, 1}, Int32, Int32, Int32, Array{Bool, 1},))
    precompile(Base.ht_keyindex2, (Base.Dict{Any, Base.Dict{Int32, Base.Dict{Int32, Any}}}, Base.MulFun,))
    precompile(Base.create_expr_cache, (ASCIIString, ASCIIString,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Int32,))
    precompile(Base.julia_cmd, ())
    precompile(Base.LinAlg.BLAS.gemm!, (Char, Char, Float64, Array{Float64, 2}, Array{Float64, 2}, Float64, Array{Float64, 2},))
    precompile(Base.Cartesian._ncall, (Int32, Expr, Symbol,))
    precompile(Base.mapreduce_impl, (Base.IdFun, Base.MinFun, Array{Float64, 1}, Int32, Int32,))
    precompile(Base.rehash!, (Base.Dict{Int32, Base.Dict{Int32, Any}}, Int32,))
    precompile(Base.promote_type, (Type{UInt8}, Type{Union{}},))
    precompile(Base.setindex!, (Array{Float64, 2}, Array{Float64, 1}, Base.StepRange{Int32, Int32},))
    precompile(Base.call, (Type{Base.RefArray{Union{UTF8String, ASCIIString}, Array{Union{UTF8String, ASCIIString}, 1}, Any}}, Array{Union{UTF8String, ASCIIString}, 1}, Int32, Bool,))
    precompile(Base.uvfinalize, (Base.Process,))
    precompile(Base.throw_boundserror, (Array{Float64, 1}, Base.UnitRange{Int32},))
    precompile(Base.LinAlg.char_uplo, (Symbol,))
    precompile(Base.cmd_gen, (Tuple{Tuple{Base.Cmd}, Tuple{ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString, ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString}},))
    precompile(Base.convert, (Type{Base.IO}, Base.TTY,))
    precompile(Base.setup_stdio, (Function, Tuple{Base.Pipe, Base.TTY, Base.TTY},))
    precompile(Base.throw_setindex_mismatch, (Array{Float64, 1}, Tuple{Int32},))
    precompile(Base.fill!, (Array{Float64, 1}, Float64,))
    precompile(Base.spawn, (Array{Any, 1}, Base.Cmd, Tuple{Base.Pipe, Base.TTY, Base.TTY}, Bool, Bool,))
    precompile(Base.rehash!, (Base.Dict{Any, Base.Dict{Int32, Base.Dict{Int32, Any}}}, Int32,))
    precompile(Base.unsafe_copy!, (Array{Float64, 1}, Int32, Array{Float64, 1}, Int32, Int32,))
    precompile(Base.LinAlg.LAPACK.trtrs!, (Char, Char, Char, Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.complex, (Array{Float64, 1}, Array{Float64, 1},))
    precompile(Base.Filesystem.unlink, (ASCIIString,))
    precompile(Base.LinAlg.copy!, (Array{Float64, 2}, Base.UnitRange{Int32}, Base.UnitRange{Int32}, Char, Array{Float64, 2}, Base.UnitRange{Int32}, Base.UnitRange{Int32},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Module,))
    precompile(Base.LinAlg.inv, (Base.LinAlg.LowerTriangular{Float64, Array{Float64, 2}},))
    precompile(Base.abs2, (Array{Float64, 1},))
    precompile(Base._setindex!, (Base.Dict{Any, Base.Dict{Int32, Base.Dict{Int32, Any}}}, Base.Dict{Int32, Base.Dict{Int32, Any}}, Function, Int32,))
    precompile(Base._setindex!, (Base.Dict{Any, Base.Dict{Int32, Base.Dict{Int32, Any}}}, Base.Dict{Int32, Base.Dict{Int32, Any}}, Base.MulFun, Int32,))
    precompile(Base.promote_typeof, (Float64, Int32,))
    precompile(Base.with_output_color, (Function, Symbol, Base.TTY, ASCIIString,))
    precompile(Base.sizeof, (Array{Float64, 1},))
    precompile(Base._setindex!, (Base.Dict{Int32, Base.Dict{Int32, Any}}, Base.Dict{Int32, Any}, Int32, Int32,))
    precompile(Base.LinAlg.issym, (Array{Float64, 2},))
    precompile(Base.LinAlg.chol!, (Array{Float64, 2}, Type{Base.LinAlg.LowerTriangular},))
    precompile(Base.call, (Type{Base.Dict{Int32, Base.Dict{Int32, Any}}},))
    precompile(Base.compilecache, (ASCIIString,))
    precompile(Base.pipeline, (Array{Any, 1}, Base.Cmd,))
    precompile(Base.LinAlg.LAPACK.getrf!, (Array{Float64, 2},))
    precompile(Base.getindex, (Tuple{Expr, Expr}, Base.UnitRange{Int32},))
    precompile(Base.LinAlg.chol!, (Array{Float64, 2}, Type{Base.LinAlg.UpperTriangular},))
    precompile(Base.Cartesian._ncall, (Int32, Symbol, Expr,))
    precompile(Base.getindex, (Array{Float64, 1}, Int32,))
    precompile(Base.Cartesian._nref, (Int32, Symbol, Symbol,))
    precompile(Base.LinAlg.LAPACK.chktrans, (Char,))
    precompile(Base.vcat, (Array{Float64, 1}, Array{Float64, 1},))
    precompile(Base.all, (Base.BitArray{1},))
    precompile(Base.arg_gen, (ASCIIString, ASCIIString,))
    precompile(Base.transpose, (Array{Float64, 1},))
    precompile(Base.call, (Type{Base.RefArray{Ptr{UInt8}, Array{Ptr{UInt8}, 1}, Any}}, Array{Ptr{UInt8}, 1}, Int32, Array{Any, 1},))
    precompile(Base._unsafe_getindex, (Base.LinearFast, Array{Float64, 2}, Base.Colon, Base.UnitRange{Int32},))
    precompile(Base.repl_color, (ASCIIString, Symbol,))
    precompile(Base.hvcat_fill, (Array{Float64, 1}, Tuple{Float64, Float64, Float64, Int32, Int32, Int32},))
    precompile(Base.fill!, (Array{Float64, 2}, Float64,))
    precompile(Base.flush, (Base.PipeEndpoint,))
    precompile(Base.LinAlg.diagind, (Int32, Int32, Int32,))
    precompile(Base.cmd_gen, (Tuple{Tuple{UTF8String}, Tuple{ASCIIString, ASCIIString}, Tuple{ASCIIString, ASCIIString}},))
    precompile(Base.fill!, (Array{Float64, 2}, Int32,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, SimpleVector,))
    precompile(Base.Broadcast.longer_size, (Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.call, (Type{Base.Dict{Int32, Any}},))
    precompile(Base._setindex!, (Base.Dict{Int32, Any}, Function, Int32, Int32,))
    precompile(Base.push!, (Array{Float64, 1}, Float64,))
    precompile(Base.promote_shape, (Tuple{Int32, Int32}, Tuple{Int32, Int32},))
    precompile(Base.getindex, (Type{Union{UTF8String, ASCIIString}}, UTF8String,))
    precompile(Base.call, (Type{Array}, Type{Float64}, Tuple{Int32, Int32},))
    precompile(Base.throw_boundserror, (Array{Float64, 2}, Tuple{Base.Colon, Base.UnitRange{Int32}},))
    precompile(Base.Serializer.serialize_any, (Base.SerializationState{Base.Pipe}, QuoteNode,))
    precompile(Base.info, (Array{Any, 1}, Base.TTY, ASCIIString,))
    precompile(Base.vcat, (Float64, Float64, Float64,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Bool,))
    precompile(Base.Serializer.serialize_any, (Base.SerializationState{Base.Pipe}, UInt8,))
    precompile(Base.unsafe_convert, (Type{Ptr{Ptr{UInt8}}}, Ptr{Void},))
    precompile(Base.LinAlg.generic_matmatmul!, (Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.length, (Array{Float64, 1},))
    precompile(Base._uv_hook_close, (Base.Process,))
    precompile(Base.Broadcast.broadcast!, (Base.MulFun, Array{Float64, 2}, Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.unsafe_convert, (Type{Ptr{UInt8}}, Ptr{Void},))
    precompile(Base.setindex!, (Array{Float64, 1}, Float64, Int32, Int32,))
    precompile(Base.promote_typeof, (Float64, Float64,))
    precompile(Base.LinAlg.LAPACK.chkdiag, (Char,))
    precompile(Base.Broadcast.broadcast!, (Function, Array{Float64, 1}, Array{Float64, 1}, Array{Float64, 1},))
    precompile(Base.append!, (Array{Union{UTF8String, ASCIIString}, 1}, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.call, (Type{Array}, Type{Float64}, Int32, Int32,))
    precompile(Base.unsafe_convert, (Type{Ptr{UInt8}}, ASCIIString,))
    precompile(Base.LinAlg.LAPACK.syevr!, (Char, Char, Char, Array{Float64, 2}, Float64, Float64, Int32, Int32, Float64,))
    precompile(Base.containsnul, (UTF8String,))
    precompile(Base.Serializer.serialize_any, (Base.SerializationState{Base.Pipe}, ASCIIString,))
    precompile(Base.println_with_color, (Symbol, Base.TTY, ASCIIString,))
    precompile(Base.Cartesian._nloops, (Int32, Symbol, Symbol, Expr,))
    precompile(Base.LinAlg._cholfact!, (Array{Float64, 2}, Type{Base.Val{false}}, Symbol,))
    precompile(Base.eye, (Type{Float64}, Int32, Int32,))
    precompile(Base.Broadcast.longer_size, (Array{Float64, 1}, Array{Float64, 1},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Expr,))
    precompile(Base.uvfinalize, (Base.PipeEndpoint,))
    precompile(Base.Broadcast.longer_size, (Array{Float64, 2},))
    precompile(Base.LinAlg.gemm_wrapper!, (Array{Float64, 2}, Char, Char, Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.convert, (Type{Float64}, Int32,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, Expr,))
    precompile(Base.getindex, (Array{Union{UTF8String, ASCIIString}, 1}, Int32,))
    precompile(Base.ht_keyindex2, (Base.Dict{Any, Base.Dict{Int32, Base.Dict{Int32, Any}}}, Function,))
    precompile(Base.Filesystem.isdir, (ASCIIString,))
    precompile(Base.close, (Base.Pipe,))
    precompile(Base.unsafe_write, (Base.PipeEndpoint, Ptr{UInt8}, UInt32,))
    precompile(Base.setindex!, (Array{Float64, 1}, Int32, Int32,))
    precompile(Base.bytestring, (ASCIIString, ASCIIString,))
    precompile(Base.promote_op, (Base.AddFun, Type{Float64}, Type{Float64},))
    precompile(Base.cstr, (ASCIIString,))
    precompile(Base.Filesystem.rm, (Array{Any, 1}, ASCIIString,))
    precompile(Base.promote_op, (Base.SubFun, Type{Float64}, Type{Float64},))
    precompile(Base.spawn_opts_swallow, (Tuple{Base.Pipe, Base.TTY, Base.TTY},))
    precompile(Base.LinAlg.lufact!, (Array{Float64, 2}, Type{Base.Val{true}},))
    precompile(Base.transpose!, (Array{Float64, 2}, Array{Float64, 2},))
    precompile(Base.LinAlg.inv, (Base.LinAlg.LU{Float64, Array{Float64, 2}},))
    precompile(Base.promote_typeof, (Int32,))
    precompile(Base.cconvert, (Type{Ptr{Ptr{UInt8}}}, Ptr{Void},))
    precompile(Base.LinAlg.copy_transpose!, (Array{Float64, 2}, Base.UnitRange{Int32}, Base.UnitRange{Int32}, Char, Array{Float64, 2}, Base.UnitRange{Int32}, Base.UnitRange{Int32},))
    precompile(Base.copy, (Array{Float64, 1},))
    precompile(Base.promote_typeof, (Int32, Int32,))
    precompile(Base.Filesystem.joinpath, (ASCIIString, UTF8String,))
    precompile(Base.success, (Base.Process,))
    precompile(Base.setindex!, (Array{Float64, 1}, Int32, Int32, Int32,))
    precompile(Base.unsafe_convert, (Type{Ptr{UInt8}}, UTF8String,))
    precompile(Base.cconvert, (Type{Ptr{UInt8}}, UTF8String,))
    precompile(Base.LinAlg.inv, (Array{Float64, 2},))
    precompile(Base.indexed_next, (Tuple{Base.Pipe, Base.Process}, Int32, Int32,))
    precompile(Base.start, (Tuple{Base.Pipe, Base.Process},))
    precompile(Base.convert, (Type{Ptr{Void}}, Ptr{Void},))
    precompile(Base.link_pipe, (Base.PipeEndpoint, Bool, Base.PipeEndpoint, Bool,))
    precompile(Base.LinAlg.inv, (Base.LinAlg.UpperTriangular{Float64, Array{Float64, 2}},))
    precompile(Base.cconvert, (Type{Ptr{UInt8}}, Ptr{Void},))
    precompile(Base.setup_stdio, (Base.Pipe, Bool,))
    precompile(Base.promote_result, (Type{Bool}, Type{UInt8}, Type{UInt8}, Type{Union{}},))
    precompile(Base.LinAlg.parent, (Base.LinAlg.UpperTriangular{Float64, Array{Float64, 2}},))
    precompile(Base.Broadcast.longer_size, (Array{Float64, 1},))
    precompile(Base.ht_keyindex2, (Base.Dict{Int32, Base.Dict{Int32, Any}}, Int32,))
    precompile(Base.getindex, (Array{Function, 1}, Int32,))
    precompile(Base.call, (Type{Ref{Ptr{UInt8}}}, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.eltype, (Array{Float64, 1},))
    precompile(Base.ht_keyindex2, (Base.Dict{Int32, Any}, Int32,))
    precompile(Base.Cartesian.lreplace!, (LineNumberNode, Base.Cartesian.LReplace{ASCIIString},))
    precompile(Base.promote_type, (Type{Bool}, Type{UInt8},))
    precompile(Base.promote_type, (Type{Float64}, Type{Float64},))
    precompile(Base.arg_gen, (Base.Cmd,))
    precompile(Base.LinAlg.eigvals!, (Array{Any, 1}, Array{Float64, 2},))
    precompile(Base.Serializer.serialize, (Base.Pipe, Expr,))
    precompile(Base.Serializer.serialize_type_data, (Base.SerializationState{Base.Pipe}, DataType,))
    precompile(Base.astcopy, (LineNumberNode,))
    precompile(Base.Serializer.serialize_array_data, (Base.Pipe, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.LinAlg.gemv!, (Array{Float64, 1}, Char, Array{Float64, 2}, Array{Float64, 1},))
    precompile(Base.redir_err, (Base.Cmd, Base.TTY,))
    precompile(Base.ctranspose, (Array{Float64, 2},))
    precompile(Base.LinAlg.convert, (Type{Array{Float64, 2}}, Base.LinAlg.UpperTriangular{Float64, Array{Float64, 2}},))
    precompile(Base.promote_rule, (Type{UInt8}, Type{Bool},))
    precompile(Base._mapreduce, (Base.IdFun, Base.MinFun, Base.LinearFast, Array{Float64, 1},))
    precompile(Base.ctranspose, (Array{Float64, 1},))
    precompile(Base.LinAlg.eigvals, (Array{Any, 1}, Array{Float64, 2},))
    precompile(Base.unsafe_write, (Base.PipeEndpoint, Base.RefValue{UInt8}, Int32,))
    precompile(Base.convert, (Type{Base.IO}, Base.Pipe,))
    precompile(Base.minimum, (Array{Float64, 1},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, DataType,))
    precompile(Base.unsafe_getindex, (Array{Float64, 1}, Base.UnitRange{Int32},))
    precompile(Base.init_pipe!, (Array{Any, 1}, Base.PipeEndpoint,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, ASCIIString,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, QuoteNode,))
    precompile(Base.cconvert, (Type{Ptr{UInt8}}, ASCIIString,))
    precompile(Base.spawn, (Array{Any, 1}, Base.CmdRedirect, Tuple{Base.Pipe, Base.TTY, Base.TTY}, Bool, Bool,))
    precompile(Base.arg_gen, (UTF8String,))
    precompile(Base.copy!, (Array{Float64, 2}, Int32, Array{Float64, 2}, Int32, Int32,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, LineNumberNode,))
    precompile(Base.getindex, (Array{Float64, 1}, Base.UnitRange{Int32},))
end
