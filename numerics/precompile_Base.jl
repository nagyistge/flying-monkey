function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    precompile(Base.Serializer.serialize_type, (Base.SerializationState{Base.Pipe}, DataType,))
    precompile(Base.Serializer.write_as_tag, (Base.Pipe, Int32,))
    precompile(Base.check_open, (Base.PipeEndpoint,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, UInt8,))
    precompile(Base.write, (Base.Pipe, Array{UInt8, 1},))
    precompile(Base.flush, (Base.PipeEndpoint,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Int32,))
    precompile(Base.Filesystem.lstat, (ASCIIString,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, LineNumberNode,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, Array{UInt8, 1},))
    precompile(Base.Serializer.serialize_array_data, (Base.Pipe, Array{UInt8, 1},))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, QuoteNode,))
    precompile(Base.Serializer.serialize_any, (Base.SerializationState{Base.Pipe}, UInt8,))
    precompile(Base.close, (Base.Pipe,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Tuple{Int32},))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, Expr,))
    precompile(Base.Serializer.serialize_any, (Base.SerializationState{Base.Pipe}, LineNumberNode,))
    precompile(Base.unsafe_write, (Base.Pipe, Base.RefValue{Int32}, Int32,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.write, (Base.Pipe, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Symbol,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, SimpleVector,))
    precompile(Base.uv_write, (Base.PipeEndpoint, Ptr{UInt8}, UInt32,))
    precompile(Base.cmd_gen, (Tuple{Tuple{UTF8String}, Tuple{ASCIIString, ASCIIString}, Tuple{ASCIIString, ASCIIString}},))
    precompile(Base.Serializer.serialize_mod_names, (Base.SerializationState{Base.Pipe}, Module,))
    precompile(Base._uv_hook_close, (Base.Process,))
    precompile(Base.Serializer.serialize_cycle, (Base.SerializationState{Base.Pipe}, ASCIIString,))
    precompile(Base.call, (Type{Base.Process}, Base.Cmd, Ptr{Void}, Base.Pipe, Base.TTY, Base.TTY,))
    precompile(Base.call, (Type{Base.RefArray{Union{UTF8String, ASCIIString}, Array{Union{UTF8String, ASCIIString}, 1}, Any}}, Array{Union{UTF8String, ASCIIString}, 1}, Int32, Bool,))
    precompile(Base.indexed_next, (Tuple{Base.Pipe, Base.Process}, Int32, Int32,))
    precompile(Base.malloc_julia_pipe!, (Base.PipeEndpoint,))
    precompile(Base.open, (Base.CmdRedirect, ASCIIString, Base.TTY,))
    precompile(Base.create_expr_cache, (ASCIIString, ASCIIString,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, QuoteNode,))
    precompile(Base.convert, (Type{Base.IO}, Base.TTY,))
    precompile(Base.call, (Array{Any, 1}, Type{Base.Cmd}, Base.Cmd,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Array{UInt8, 1},))
    precompile(Base.uvfinalize, (Base.Process,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Bool,))
    precompile(Base.cmd_gen, (Tuple{Tuple{Base.Cmd}, Tuple{ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString, ASCIIString}, Tuple{ASCIIString}, Tuple{ASCIIString}},))
    precompile(Base.with_output_color, (Function, Symbol, Base.TTY, ASCIIString,))
    precompile(Base.unsafe_convert, (Type{Ptr{Ptr{UInt8}}}, Base.RefArray{Ptr{UInt8}, Array{Ptr{UInt8}, 1}, Any},))
    precompile(Base.call, (Type{Base.RefArray{Ptr{UInt8}, Array{Ptr{UInt8}, 1}, Any}}, Array{Ptr{UInt8}, 1}, Int32, Array{Any, 1},))
    precompile(Base.arg_gen, (ASCIIString, ASCIIString,))
    precompile(Base.Filesystem.unlink, (ASCIIString,))
    precompile(Base.pipeline, (Array{Any, 1}, Base.Cmd,))
    precompile(Base.getindex, (Type{Union{UTF8String, ASCIIString}}, UTF8String,))
    precompile(Base.compilecache, (ASCIIString,))
    precompile(Base._jl_spawn, (UTF8String, Array{Union{UTF8String, ASCIIString}, 1}, Ptr{Void}, Base.Process, Base.PipeEndpoint, Base.TTY, Base.TTY,))
    precompile(Base._link_pipe, (Ptr{Void}, Ptr{Void},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Expr,))
    precompile(Base.info, (Array{Any, 1}, Base.TTY, ASCIIString,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.containsnul, (UTF8String,))
    precompile(Base.repl_color, (ASCIIString, Symbol,))
    precompile(Base.Serializer.serialize_any, (Base.SerializationState{Base.Pipe}, QuoteNode,))
    precompile(Base.julia_cmd, (UTF8String,))
    precompile(Base.spawn, (Array{Any, 1}, Base.CmdRedirect, Tuple{Base.Pipe, Base.TTY, Base.TTY}, Bool, Bool,))
    precompile(Base.uvfinalize, (Base.PipeEndpoint,))
    precompile(Base.append!, (Array{Union{UTF8String, ASCIIString}, 1}, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.setup_stdio, (Function, Tuple{Base.Pipe, Base.TTY, Base.TTY},))
    precompile(Base.julia_cmd, ())
    precompile(Base.println_with_color, (Symbol, Base.TTY, ASCIIString,))
    precompile(Base.Filesystem.isdir, (ASCIIString,))
    precompile(Base.success, (Base.Process,))
    precompile(Base.Serializer.serialize_any, (Base.SerializationState{Base.Pipe}, ASCIIString,))
    precompile(Base.redir_err, (Base.Cmd, Base.TTY,))
    precompile(Base.unsafe_write, (Base.PipeEndpoint, Ptr{UInt8}, UInt32,))
    precompile(Base.Serializer.serialize_array_data, (Base.Pipe, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, Module,))
    precompile(Base.Serializer.serialize_type_data, (Base.SerializationState{Base.Pipe}, DataType,))
    precompile(Base.getindex, (Array{Union{UTF8String, ASCIIString}, 1}, Int32,))
    precompile(Base.unsafe_convert, (Type{Ptr{UInt8}}, UTF8String,))
    precompile(Base.promote_result, (Type{Bool}, Type{UInt8}, Type{UInt8}, Type{Union{}},))
    precompile(Base.cstr, (ASCIIString,))
    precompile(Base.unsafe_convert, (Type{Ptr{UInt8}}, Ptr{Void},))
    precompile(Base.start, (Tuple{Base.Pipe, Base.Process},))
    precompile(Base.unsafe_convert, (Type{Ptr{Ptr{UInt8}}}, Ptr{Void},))
    precompile(Base.setup_stdio, (Base.Pipe, Bool,))
    precompile(Base.cconvert, (Type{Ptr{UInt8}}, Ptr{Void},))
    precompile(Base.promote_type, (Type{UInt8}, Type{Union{}},))
    precompile(Base.unsafe_convert, (Type{Ptr{UInt8}}, ASCIIString,))
    precompile(Base.convert, (Type{Base.IO}, Base.Pipe,))
    precompile(Base.bytestring, (ASCIIString, ASCIIString,))
    precompile(Base.cconvert, (Type{Ptr{UInt8}}, ASCIIString,))
    precompile(Base.Serializer.serialize, (Base.Pipe, Expr,))
    precompile(Base.link_pipe, (Base.PipeEndpoint, Bool, Base.PipeEndpoint, Bool,))
    precompile(Base.spawn_opts_swallow, (Tuple{Base.Pipe, Base.TTY, Base.TTY},))
    precompile(Base.call, (Type{Ref{Ptr{UInt8}}}, Array{Union{UTF8String, ASCIIString}, 1},))
    precompile(Base.promote_rule, (Type{UInt8}, Type{Bool},))
    precompile(Base.cconvert, (Type{Ptr{Ptr{UInt8}}}, Ptr{Void},))
    precompile(Base.convert, (Type{Ptr{Void}}, Ptr{Void},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, DataType,))
    precompile(Base.promote_type, (Type{Bool}, Type{UInt8},))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, LineNumberNode,))
    precompile(Base.Filesystem.rm, (Array{Any, 1}, ASCIIString,))
    precompile(Base.arg_gen, (Base.Cmd,))
    precompile(Base.unsafe_write, (Base.PipeEndpoint, Base.RefValue{UInt8}, Int32,))
    precompile(Base.arg_gen, (UTF8String,))
    precompile(Base.cconvert, (Type{Ptr{UInt8}}, UTF8String,))
    precompile(Base.spawn, (Array{Any, 1}, Base.Cmd, Tuple{Base.Pipe, Base.TTY, Base.TTY}, Bool, Bool,))
    precompile(Base.init_pipe!, (Array{Any, 1}, Base.PipeEndpoint,))
    precompile(Base.Serializer.serialize, (Base.SerializationState{Base.Pipe}, ASCIIString,))
end
